#pragma once

#include "AudioDictionary.h"
#include "speechSamples.h"

// please note that the processing here is w/o namespace

simple_tts::AudioDictionaryEntry MyAudioDictionaryValues[] = {
{"SILENCE", new MemoryStream(silence_mp3, silence_mp3_len)}, 
{"ZERO", new MemoryStream(zero_mp3, zero_mp3_len)},
{"ZED", new MemoryStream(zed_mp3, zed_mp3_len)},
{"Z", new MemoryStream(z_mp3, z_mp3_len)},
{"YAW", new MemoryStream(yaw_mp3, yaw_mp3_len)},
{"Y", new MemoryStream(y_mp3, y_mp3_len)},
{"X", new MemoryStream(x_mp3, x_mp3_len)},
{"VOLUME", new MemoryStream(volume_mp3, volume_mp3_len)},
{"TWO", new MemoryStream(two_mp3, two_mp3_len)},
{"TWENTY", new MemoryStream(twenty_mp3, twenty_mp3_len)},
{"TWELVE", new MemoryStream(twelve_mp3, twelve_mp3_len)},
{"TRILLION", new MemoryStream(trillion_mp3, trillion_mp3_len)},
{"THREE", new MemoryStream(three_mp3, three_mp3_len)},
{"THOUSAND", new MemoryStream(thousand_mp3, thousand_mp3_len)},
{"THIRTY", new MemoryStream(thirty_mp3, thirty_mp3_len)},
{"THIRTEEN", new MemoryStream(thirteen_mp3, thirteen_mp3_len)},
{"TEN", new MemoryStream(ten_mp3, ten_mp3_len)},
{"TARE", new MemoryStream(tare_mp3, tare_mp3_len)},
{"SIXTY", new MemoryStream(sixty_mp3, sixty_mp3_len)},
{"SIXTEEN", new MemoryStream(sixteen_mp3, sixteen_mp3_len)},
{"SIX", new MemoryStream(six_mp3, six_mp3_len)},
{"SEVENTY", new MemoryStream(seventy_mp3, seventy_mp3_len)},
{"SEVENTEEN", new MemoryStream(seventeen_mp3, seventeen_mp3_len)},
{"SEVEN", new MemoryStream(seven_mp3, seven_mp3_len)},
{"SET", new MemoryStream(set_mp3, set_mp3_len)},
{"SAVE", new MemoryStream(save_mp3, save_mp3_len)},
{"ROLL", new MemoryStream(roll_mp3, roll_mp3_len)},
{"PLUS", new MemoryStream(plus_mp3, plus_mp3_len)},
{"PITCH", new MemoryStream(pitch_mp3, pitch_mp3_len)},
{"ONE", new MemoryStream(one_mp3, one_mp3_len)},
{"NINETY", new MemoryStream(ninety_mp3, ninety_mp3_len)},
{"NINETEEN", new MemoryStream(nineteen_mp3, nineteen_mp3_len)},
{"NINE", new MemoryStream(nine_mp3, nine_mp3_len)},
{"MINUS", new MemoryStream(minus_mp3, minus_mp3_len)},
{"MILLION", new MemoryStream(million_mp3, million_mp3_len)},
{"MENU", new MemoryStream(menu_mp3, menu_mp3_len)},
{"MEMORY", new MemoryStream(memory_mp3, memory_mp3_len)},
{"HUNDRED", new MemoryStream(hundred_mp3, hundred_mp3_len)},
{"FOURTEEN", new MemoryStream(fourteen_mp3, fourteen_mp3_len)},
{"FOUR", new MemoryStream(four_mp3, four_mp3_len)},
{"FORTY", new MemoryStream(forty_mp3, forty_mp3_len)},
{"FIVE", new MemoryStream(five_mp3, five_mp3_len)},
{"FIFTY", new MemoryStream(fifty_mp3, fifty_mp3_len)},
{"FIFTEEN", new MemoryStream(fifteen_mp3, fifteen_mp3_len)},
{"EXIT", new MemoryStream(exit_mp3, exit_mp3_len)},
{"ENABLED", new MemoryStream(enabled_mp3, enabled_mp3_len)},
{"ELEVEN", new MemoryStream(eleven_mp3, eleven_mp3_len)},
{"EIGHTY", new MemoryStream(eighty_mp3, eighty_mp3_len)},
{"EIGHTEEN", new MemoryStream(eighteen_mp3, eighteen_mp3_len)},
{"EIGHT", new MemoryStream(eight_mp3, eight_mp3_len)},
{"DISABLED", new MemoryStream(disabled_mp3, disabled_mp3_len)},
{"DEGREES", new MemoryStream(degrees_mp3, degrees_mp3_len)},
{"COMPLETE", new MemoryStream(complete_mp3, complete_mp3_len)},
{"CALIBRATION", new MemoryStream(calibration_mp3, calibration_mp3_len)},
{"CALIBRATING", new MemoryStream(calibrating_mp3, calibrating_mp3_len)},
{"CALIBRATED", new MemoryStream(calibrated_mp3, calibrated_mp3_len)},
{"BILLION", new MemoryStream(billion_mp3, billion_mp3_len)},
{"AXIS", new MemoryStream(axis_mp3, axis_mp3_len)},
{"ANGLE", new MemoryStream(angle_mp3, angle_mp3_len)},
{"AND", new MemoryStream(and_mp3, and_mp3_len)},
{nullptr, nullptr}};
